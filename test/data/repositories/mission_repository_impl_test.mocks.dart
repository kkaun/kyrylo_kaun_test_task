// Mocks generated by Mockito 5.0.16 from annotations
// in kyrylo_kaun_test_task/test/data/repositories/mission_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:kyrylo_kaun_test_task/data/datasources/spacex_remote_datasource.dart' as _i3;
import 'package:kyrylo_kaun_test_task/domain/entites/launch_entities.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeLaunchPage_0 extends _i1.Fake implements _i2.LaunchList {}

/// A class which mocks [SpaceXRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSpaceXRemoteDatasource extends _i1.Mock implements _i3.SpaceXRemoteDatasource {
  MockSpaceXRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.LaunchList> searchForLaunches({String? missionNameFragment}) =>
      (super.noSuchMethod(Invocation.method(#searchForLaunches, [], {#missionNameFragment: missionNameFragment}),
          returnValue: Future<_i2.LaunchList>.value(_FakeLaunchPage_0())) as _i4.Future<_i2.LaunchList>);
  @override
  String toString() => super.toString();
}
